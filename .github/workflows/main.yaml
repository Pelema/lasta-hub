name: PDQA CI CD
run-name: ${{ github.actor }} Running Pipeline
on:
    pull_request: 
      types:
        - closed
      branches:
        - feature/codebase-combine
    push:
      branches:
        - feature/codebase-combine

jobs: 
    build_develop:
        name: Build and Push
        if: github.ref == 'refs/heads/feature/codebase-combine'
        environment: develop
        runs-on: ubuntu-latest
        steps:
            # name: Checkout feature/codebase-combine
            # uses: actions/checkout@v4

            -   name: Log in to GitHub Container Registry
                uses: docker/login-action@v2
                with:
                    registry: ghcr.io
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            -   name: Build Container Image
                env: 
                    KAFKA_BROKER_HOST: ${{ vars.KAFKA_BROKER_HOST }}

                run: |
                    docker build -f Dockerfile.backend --build-arg KAFKA_BROKER_HOST=$KAFKA_BROKER_HOST \
                    -t ghcr.io/pelema/lasta-hub:$(echo $GITHUB_SHA | head -c7) .

            -   name: Push image to GitHub Container Registry
                run: |
                      docker push ghcr.io/pelema/lasta-hub:$(echo $GITHUB_SHA | head -c7)
              

    # gitops_develop:
    #     needs: build_develop
    #     if: github.ref == 'refs/heads/feature/codebase-combine'
    #     runs-on: ubuntu-latest
    #     steps:
    #     -   name: Clone GitOps repository
    #         uses: actions/checkout@v3
    #         with:
    #             repository: pelema/dev_ops
    #             token: ${{ secrets.PAT }}
    #             ref: pdqa
        
    #     -   name: Kustomize CBI-develop
    #         if: github.repository == 'pelema/lasta-hub'
    #         run: |
    #             cd lasta-hub/overlays/develop
    #             SHA=$(echo ${{needs.build_develop.outputs.output1}} | head -c7)
    #             kustomize edit set image ghcr.io/pelema/lasta-hub:$SHA
    #             git config user.name GitOps pdqa
    #             git config user.email gitops@pdqa.com
    #             git add .
    #             git commit -m "version-$SHA"
    #             git push 

    # develop-deploy:
    #     needs: gitops_develop
    #     runs-on: ubuntu-latest


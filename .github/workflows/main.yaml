name: PDQA CI CD
run-name: ${{ github.actor }} Running Pipeline
on:
    pull_request: 
      types:
        - closed
      branches:
        - feature/codebase-combine
    push:
      branches:
        - feature/codebase-combine

jobs: 
    build_develop:
        name: Build and Push
        if: github.ref == 'refs/heads/feature/codebase-combine'
        environment: develop
        runs-on: ubuntu-latest
        outputs:
          output1: ${{ steps.step1.outputs.sha }}
        steps:
            - name: Checkout feature/codebase-combine
              uses: actions/checkout@v4

            - id: step1
              run: |
                echo "::set-output name=sha::$(echo $GITHUB_SHA)"
                echo $GITHUB_SHA > $GITHUB_WORKSPACE/_meta 

            -   name: Log in to GitHub Container Registry
                uses: docker/login-action@v2
                with:
                    registry: ghcr.io
                    username: ${{ github.actor }}
                    password: ${{ secrets.GITHUB_TOKEN }}

            -   name: Build Container Image
                env: 
                    KAFKA_BROKER_HOST: ${{ vars.KAFKA_BROKER_HOST }}

                run: |
                    docker build -f ./Dockerfile.backend --build-arg KAFKA_BROKER_HOST=$KAFKA_BROKER_HOST \
                    -t ghcr.io/pelema/lasta-hub:backend-$(echo $GITHUB_SHA | head -c7) .

            -   name: Push image to GitHub Container Registry
                run: |
                      docker push ghcr.io/pelema/lasta-hub:backend-$(echo $GITHUB_SHA | head -c7)
              
    gitops_develop:
        needs: build_develop
        if: github.ref == 'refs/heads/feature/codebase-combine'
        runs-on: ubuntu-latest
        steps:
        -   name: Clone GitOps repository
            uses: actions/checkout@v3
            with:
                repository: pelema/dev-ops
                token: ${{ secrets.PAT }}
                ref: master
        
        -   name: Kustomize CBI-develop
            if: github.repository == 'pelema/lasta-hub'
            run: |
                cd overlays/develop
                SHA=$(echo ${{needs.build_develop.outputs.output1}} | head -c7)
                kustomize edit set image ghcr.io/pelema/lasta-hub:backend-$SHA
                git config user.name github-actions[bot]
                git config user.email 41898282+github-actions[bot]@users.noreply.github.com
                git add .
                git commit -m "version-$SHA"
                git push 

    # develop-deploy:
    #     needs: gitops_develop
    #     runs-on: ubuntu-latest

